subprojects {
  apply plugin: 'java'

  group = 'com.palominolabs.ssh'
  version = '1.0.0-SNAPSHOT'

  repositories {
    mavenCentral()
  }

  ext {
    depVersions = [
        slf4j: '1.7.6',
    ]
  }

  tasks.withType(JavaCompile) {
    options.compilerArgs << "-Xlint:unchecked"
  }
}

buildscript {
  repositories {
    mavenCentral()
  }
  dependencies {
    classpath "net.saliman:gradle-cobertura-plugin:2.2.4"
  }
}

task wrapper(type: Wrapper) {
  gradleVersion = '2.2.1'
}

configure(subprojects.findAll({ it.name != 'demo-app' })) {
  apply plugin: 'maven'
  apply plugin: 'signing'
  apply plugin: 'cobertura'

  sourceCompatibility = JavaVersion.VERSION_1_7

  ext.isReleaseVersion = !version.endsWith("SNAPSHOT")

  task sourcesJar(type: Jar, dependsOn: classes) {
    from sourceSets.main.allJava
    classifier = 'sources'
  }

  task javadocJar(type: Jar, dependsOn: javadoc) {
    from javadoc.destinationDir
    classifier = 'javadoc'
  }

  artifacts {
    // register in 'archives' config so they will be signed
    archives sourcesJar
    archives javadocJar
  }

  signing {
    required { gradle.taskGraph.hasTask("uploadArchives") }
    sign configurations.archives
  }

  // Set sonatypeUsername and sonatypePassword in your ~/.gradle/gradle.properties to be able to use this.
  uploadArchives {
    repositories {
      mavenDeployer {
        beforeDeployment { deployment -> signing.signPom(deployment) }

        repository(url: isReleaseVersion ?
            "https://oss.sonatype.org/service/local/staging/deploy/maven2/" :
            "https://oss.sonatype.org/content/repositories/snapshots/") {
          def u = project.hasProperty('sonatypeUsername') ? sonatypeUsername : 'FIXME'
          def p = project.hasProperty('sonatypePassword') ? sonatypePassword : 'FIXME'
          authentication(userName: u, password: p)
        }

        pom.project {
          name rootProject.name
          packaging 'jar'
          description 'Embed a groovy shell accessible over SSH.'
          url "https://github.com/palominolabs/${rootProject.name}"

          scm {
            url "scm:git@github.com:palominolabs/${rootProject.name}.git"
            connection "scm:git@github.com:palominolabs/${rootProject.name}.git"
            developerConnection "scm:git@github.com:palominolabs/${rootProject.name}.git"
          }

          licenses {
            license {
              name 'The Apache Software License, Version 2.0'
              url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
              distribution 'repo'
            }
          }

          developers {
            developer {
              id 'marshallpierce'
              name 'Marshall Pierce'
            }
          }
        }
      }
    }
  }
}
